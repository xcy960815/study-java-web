// vite.config.ts
import { fileURLToPath, URL } from "node:url";
import { defineConfig, loadEnv } from "file:///Users/opera/Documents/self/study-java-web/node_modules/vite/dist/node/index.js";
import tailwindcss from "file:///Users/opera/Documents/self/study-java-web/node_modules/tailwindcss/lib/index.js";
import autoprefixer from "file:///Users/opera/Documents/self/study-java-web/node_modules/autoprefixer/lib/autoprefixer.js";
import vue from "file:///Users/opera/Documents/self/study-java-web/node_modules/@vitejs/plugin-vue/dist/index.mjs";
import { createSvgIconsPlugin } from "file:///Users/opera/Documents/self/study-java-web/node_modules/vite-plugin-svg-icons/dist/index.mjs";
import path from "path";
import AutoImport from "file:///Users/opera/Documents/self/study-java-web/node_modules/unplugin-auto-import/dist/vite.js";
import Components from "file:///Users/opera/Documents/self/study-java-web/node_modules/unplugin-vue-components/dist/vite.js";
import { ElementPlusResolver } from "file:///Users/opera/Documents/self/study-java-web/node_modules/unplugin-vue-components/dist/resolvers.js";
import ElementPlus from "file:///Users/opera/Documents/self/study-java-web/node_modules/unplugin-element-plus/dist/vite.js";
import { createHtmlPlugin } from "file:///Users/opera/Documents/self/study-java-web/node_modules/vite-plugin-html/dist/index.mjs";
import { visualizer } from "file:///Users/opera/Documents/self/study-java-web/node_modules/rollup-plugin-visualizer/dist/plugin/index.js";
var __vite_injected_original_import_meta_url = "file:///Users/opera/Documents/self/study-java-web/vite.config.ts";
var vite_config_default = defineConfig(({ mode }) => {
  const VITE_PORT = parseInt(
    loadEnv(mode, "./env/").VITE_PORT
  );
  const VITE_API_SERVER_DOMAIN = loadEnv(
    mode,
    "./env/"
  ).VITE_API_SERVER_DOMAIN;
  const VITE_API_SERVER_DOMAIN_PREFIX = loadEnv(
    mode,
    "./env/"
  ).VITE_API_SERVER_DOMAIN_PREFIX;
  const VITE_API_DOMAIN_PREFIX = loadEnv(
    mode,
    "./env/"
  ).VITE_API_DOMAIN_PREFIX;
  const VITE_API_DOMAIN_PREFIX_REG = new RegExp(
    `^${VITE_API_DOMAIN_PREFIX}`
  );
  const VITE_BASE_URL = loadEnv(
    mode,
    "./env/"
  ).VITE_BASE_URL;
  const VITE_APP_TITLE = loadEnv(
    mode,
    "./env/"
  ).VITE_APP_TITLE;
  return {
    base: VITE_BASE_URL,
    envDir: "./env",
    // 环境变量目录 若不设置会在 import.meta.env 中取不到变量
    build: {
      chunkSizeWarningLimit: 1024,
      // 将警告体积变成1MB
      rollupOptions: {
        output: {
          manualChunks(id) {
            if (id.includes("node_modules")) {
              if (id.includes("lodash")) {
                return "lodash";
              }
              if (id.includes("@element-plus/icons-vue")) {
                return "icons-vue";
              }
              if (id.includes("@icon-park/vue-next")) {
                return "icon-park";
              }
              if (id.includes("axios")) {
                return "axios";
              }
              if (id.includes("gpt3-tokenizer")) {
                return "gpt3-tokenizer";
              }
              if (id.includes("katex")) {
                return "katex";
              }
              if (id.includes("highlight")) {
                return "highlight";
              }
              if (id.includes("element-plus")) {
                return "element-plus";
              }
              if (id.includes("vue")) {
                return "vue";
              }
              if (id.includes("gpt-tokenizer")) {
                return "gpt-tokenizer";
              }
              return "vendor";
            }
          },
          // 入口文件输出配置
          entryFileNames: `assets/js/[name]-[format]-[hash].js`,
          // 代码引入文件输出配置
          chunkFileNames(chunkInfo) {
            const facadeModuleId = chunkInfo.facadeModuleId;
            if (facadeModuleId) {
              const facadeModuleIds = facadeModuleId.split("/");
              const parentname = facadeModuleIds[facadeModuleIds.length - 2];
              return `assets/js/${parentname}-[name]-[hash].js`;
            }
            return `assets/js/[name]-[hash].js`;
          },
          // 静态资源输出配置
          assetFileNames(assetInfo) {
            const name = assetInfo.name;
            const originalFileName = assetInfo.originalFileName;
            const imgSuffixs = [
              ".png",
              ".jpg",
              ".jpeg",
              ".gif",
              ".svg",
              ".webp"
            ];
            if (originalFileName) {
              const originalFileNames = originalFileName.split("/");
              const parentname = originalFileNames[originalFileNames.length - 2];
              if (name?.endsWith(".css")) {
                return `assets/css/${parentname ? parentname + "-" : ""}[name]-[hash].css`;
              } else if (imgSuffixs.some(
                (ext) => name?.endsWith(ext)
              )) {
                return `assets/img/${parentname ? parentname + "-" : ""}[name}]-[hash].[ext]`;
              } else {
                return `assets/${parentname ? parentname + "-" : ""}[name]-[hash].[ext]`;
              }
            } else {
              if (name?.endsWith(".css")) {
                return `assets/css/[name]-[hash].css`;
              } else if (imgSuffixs.some(
                (ext) => name?.endsWith(ext)
              )) {
                return `assets/img/[name}]-[hash].[ext]`;
              } else {
                return `assets/[name]-[hash].[ext]`;
              }
            }
          }
        }
      }
    },
    logLevel: "info",
    server: {
      // host: '0.0.0.0', // 确保服务监听所有网络接口
      host: true,
      port: VITE_PORT,
      proxy: {
        [VITE_API_DOMAIN_PREFIX]: {
          target: VITE_API_SERVER_DOMAIN,
          changeOrigin: true,
          ws: true,
          // 该配置会将真是的代理地址显示在 network 自定义请求头中
          bypass(req, res, options) {
            const proxyURL = new URL(
              options.rewrite(req.url || "") || "",
              options.target
            )?.href || "";
            res.setHeader("x-req-proxyURL", proxyURL);
          },
          rewrite: (path2) => path2.replace(
            VITE_API_DOMAIN_PREFIX_REG,
            VITE_API_SERVER_DOMAIN_PREFIX
          )
        }
      }
    },
    css: {
      postcss: {
        plugins: [
          tailwindcss(),
          autoprefixer()
        ]
      },
      preprocessorOptions: {
        scss: {
          api: "modern-compiler"
          // additionalData: `@use "@assets/style/element/theme.scss" as *;`
        }
      }
    },
    plugins: [
      vue(),
      // vueDevTools(),
      createHtmlPlugin({
        inject: {
          data: {
            VITE_APP_TITLE,
            VITE_BASE_URL
          }
        }
      }),
      AutoImport({
        resolvers: [
          ElementPlusResolver({
            // importStyle: 'sass'
          })
        ]
      }),
      Components({
        resolvers: [
          ElementPlusResolver({
            // importStyle: 'sass'
          })
        ]
      }),
      ElementPlus({
        useSource: true
      }),
      // 注册所有的svg文件生成svg雪碧图
      createSvgIconsPlugin({
        iconDirs: [
          path.resolve(
            process.cwd(),
            "src/assets/svg-icons"
          )
        ],
        // icon存放的目录
        symbolId: "icon-[name]",
        // symbol的id
        inject: "body-last",
        // 插入的位置
        customDomId: "__svg__icons__dom__"
        // svg的id
      }),
      // 打包体积分析
      visualizer({
        // open: true,
        filename: "visualizer.html"
        //分析图生成的文件名
      })
    ],
    resolve: {
      alias: {
        "@": fileURLToPath(
          new URL("./src", __vite_injected_original_import_meta_url)
        ),
        "@utils": fileURLToPath(
          new URL("./src/utils", __vite_injected_original_import_meta_url)
        ),
        "@assets": fileURLToPath(
          new URL("./src/assets", __vite_injected_original_import_meta_url)
        ),
        "@apis": fileURLToPath(
          new URL("./src/apis", __vite_injected_original_import_meta_url)
        ),
        "@store": fileURLToPath(
          new URL("./src/store", __vite_injected_original_import_meta_url)
        ),
        "@components": fileURLToPath(
          new URL("./src/components", __vite_injected_original_import_meta_url)
        ),
        "@router": fileURLToPath(
          new URL("./src/router", __vite_injected_original_import_meta_url)
        ),
        "@enums": fileURLToPath(
          new URL("./src/enums", __vite_injected_original_import_meta_url)
        ),
        "@plugins": fileURLToPath(
          new URL("./src/plugins", __vite_injected_original_import_meta_url)
        )
      }
    }
  };
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,
